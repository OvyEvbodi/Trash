Fri Nov  4 12:50:08 2022
 Line 32 in _getline file, we could return -1 since it'll mean _getline failed.
 We wouldnt want to exit our program.
Fri Nov  4 13:14:44 2022
 If _realloc fails, we would want to free the original malloced memory before returning -1.

Fri Nov  4 13:24:10 2022
 In the case of an error in _getline, we may also want to set *line_buff to NULL.
 That way we check if it is NULL in main() and then continue.
 There will be no need to free anything in main().

Sun Nov  6 01:53:24 2022
 From Chee: For the first loop in _getenv, we may want to check against all
 characters in the string passed to our function, in case we need it for other
 vars in the future. _getenv looks great!
Sun Nov  6 22:33:35 2022
 /*Received with love <3 */

Tue Nov  8 00:51:17 2022
 From Ovy: I altered line 291 in the main function.

Tue Nov  8 00:52:53 2022
 From Ovy: cd  should update the pwd of its current process, not the parent process, so I think we're good on that one.

Tue Nov  8 00:53:52 2022
 From Ovy: I can't seem to figure out how to check the updated environment after calling setenv

Tue Nov  8 00:54:57 2022
 From Ovy: Kindly run valgrind on the updated version of our program.

Tue Nov  8 01:01:05 2022
 From Ovy: More than 5 functions in tRash.c.

Tue Nov  8 03:09:23 2022
 From Ovy: I'm currently working on the echo variable replacements. The idea is to concatenate 3 strings, the first part being composed of the characters(if they exist) that precede the $$/$? triggers, the second being the replaced values of those triggers, and the third, the succeeding characters. I was hoping to use a counter variable to keep track of the first part so as to be able to backtrack the traversing process efficiently, but there seems to be a problem with my approach. Itâ€™s a messy code, and I only pushed it to keep you up to speed with my activities. 

Tue Nov  8 19:18:20 2022
 From Chee: Ovy, some things to note while working on the exit built-in.
 Exit only evaluates its first argument.
 The argument must only contain digits.
 The number can't be longer than 9 characters.
 The number can only be positive.
 The exit status is always the number mod 256.

Thu Nov 10 08:42:36 2022
 From chee: ovy, when exit code too long or too high, display an error message and do not exit.

Thu Nov 10 08:43:29 2022
 From chee: chee, find way to get exit correct exit status of previous process for 'echo $?'

Thu Nov 10 08:44:21 2022
 From chee: chee, find way to take out the full path of commands before they can display their error message.

Thu Nov 10 09:16:13 2022
 From chee: The current version of echo now supports all the relevant escape characters. It also acts exactly like the echo in sh. 

Thu Nov 10 17:02:20 2022
 From Chee: to superstar, I have written all the functions (I think) that can will do all the operations our env linked list requires.
 I have incorporated the linked list into the program. 08:42 message still valid.
Thu Nov 10 17:05:56 2022
 From Chee: to superstar, I have added the env built-in which will print from our linked list instead of the executable.

Thu Nov 10 17:30:18 2022
 From chee: to super, if you get around to working on set and unset env, there's a test_env.c you can use to see how the function you can use work.

Thu Nov 10 21:22:49 2022
 From chee: to super, I have worked on setenv and unsetenv, ignore previous note.

Fri Nov 11 14:02:07 2022
 From Chee: To super, I have written and incorporated the functions that create an array from the current version of our list and passes to execve.

Fri Nov 11 14:03:26 2022
 From Chee: To super, I have fixed previously discussed issues with exit and cd, and have modified them to use the linked list of env variables. 

Fri Nov 11 15:52:44 2022
 From Chee: I've added a makefile for compilation. You can run 'make simple_shell' and it will updathe executable 'simple_shell' :).

Sat Nov 12 21:05:41 2022
 From Chee: superestrella, renamed check_builtins.c to checks.c to accomodate another check function.

Sat Nov 12 21:07:00 2022
 From Chee: superestrella, put some of the lines in the main function in a function 'handle_cmds.c'.

Sat Nov 12 21:09:24 2022
 From Chee: superstar, created a function check_mul_cmds to check for multiple commands in checks.c

Tue Nov 15 04:01:03 2022
 From Ovy: Dp, If testing alias.c, compile with string_funcs_2.c

Tue Nov 15 05:50:01 2022
 From Ovy: to Chee, I'm currently working on the alias builtin, but haven't integrated it into our stable trash so as not to break the program.  Once I'm done with setting up the structure, I'll work on the command replacement. I have whiteboarded my possible solutions, so feel free to ask me about my approach.

Tue Nov 15 06:05:23 2022
 From Ovy: Dpmax, the exit builtin in trash smeems  to have a memory problem. Kindly check it out for us. 

Tue Nov 15 06:06:13 2022
 From Ovy: Dpmax, I haven't tried to clean up the memory of the alias builtin yet, bear with me, I'll try my best as soon as I have a working feature.

Sun Nov 20 14:54:13 2022
From Ovy: Dp, do you think we could have a seperate macro for our default buff-size of 1024 characters? Just so we don't confuse ourselves moving forward.
Amazing work fixing our bugs, thank you.
The man page is up, I'll fix the README and update it soon.